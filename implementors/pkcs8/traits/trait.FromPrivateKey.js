(function() {var implementors = {};
implementors["ecdsa"] = [{"text":"impl&lt;C&gt; <a class=\"trait\" href=\"pkcs8/traits/trait.FromPrivateKey.html\" title=\"trait pkcs8::traits::FromPrivateKey\">FromPrivateKey</a> for <a class=\"struct\" href=\"ecdsa/struct.SigningKey.html\" title=\"struct ecdsa::SigningKey\">SigningKey</a>&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: <a class=\"trait\" href=\"ecdsa/trait.Curve.html\" title=\"trait ecdsa::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/trait.AlgorithmParameters.html\" title=\"trait elliptic_curve::AlgorithmParameters\">AlgorithmParameters</a> + <a class=\"trait\" href=\"elliptic_curve/arithmetic/trait.ProjectiveArithmetic.html\" title=\"trait elliptic_curve::arithmetic::ProjectiveArithmetic\">ProjectiveArithmetic</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"elliptic_curve/type.AffinePoint.html\" title=\"type elliptic_curve::AffinePoint\">AffinePoint</a>&lt;C&gt;: <a class=\"trait\" href=\"elliptic_curve/sec1/trait.FromEncodedPoint.html\" title=\"trait elliptic_curve::sec1::FromEncodedPoint\">FromEncodedPoint</a>&lt;C&gt; + <a class=\"trait\" href=\"elliptic_curve/sec1/trait.ToEncodedPoint.html\" title=\"trait elliptic_curve::sec1::ToEncodedPoint\">ToEncodedPoint</a>&lt;C&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"elliptic_curve/scalar/type.Scalar.html\" title=\"type elliptic_curve::scalar::Scalar\">Scalar</a>&lt;C&gt;: <a class=\"trait\" href=\"ecdsa/hazmat/trait.FromDigest.html\" title=\"trait ecdsa::hazmat::FromDigest\">FromDigest</a>&lt;C&gt; + <a class=\"trait\" href=\"elliptic_curve/ops/trait.Invert.html\" title=\"trait elliptic_curve::ops::Invert\">Invert</a>&lt;Output = <a class=\"type\" href=\"elliptic_curve/scalar/type.Scalar.html\" title=\"type elliptic_curve::scalar::Scalar\">Scalar</a>&lt;C&gt;&gt; + <a class=\"trait\" href=\"ecdsa/hazmat/trait.SignPrimitive.html\" title=\"trait ecdsa::hazmat::SignPrimitive\">SignPrimitive</a>&lt;C&gt; + <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"ecdsa/type.SignatureSize.html\" title=\"type ecdsa::SignatureSize\">SignatureSize</a>&lt;C&gt;: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.58.1/std/primitive.u8.html\">u8</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"elliptic_curve/sec1/type.UntaggedPointSize.html\" title=\"type elliptic_curve::sec1::UntaggedPointSize\">UntaggedPointSize</a>&lt;C&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"type\" href=\"typenum/generated/consts/type.U1.html\" title=\"type typenum::generated::consts::U1\">U1</a>&gt; + <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.58.1/std/primitive.u8.html\">u8</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"elliptic_curve/sec1/type.UncompressedPointSize.html\" title=\"type elliptic_curve::sec1::UncompressedPointSize\">UncompressedPointSize</a>&lt;C&gt;: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.58.1/std/primitive.u8.html\">u8</a>&gt;,&nbsp;</span>","synthetic":false,"types":["ecdsa::sign::SigningKey"]}];
implementors["elliptic_curve"] = [{"text":"impl&lt;C&gt; <a class=\"trait\" href=\"pkcs8/traits/trait.FromPrivateKey.html\" title=\"trait pkcs8::traits::FromPrivateKey\">FromPrivateKey</a> for <a class=\"struct\" href=\"elliptic_curve/struct.SecretKey.html\" title=\"struct elliptic_curve::SecretKey\">SecretKey</a>&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: <a class=\"trait\" href=\"elliptic_curve/weierstrass/trait.Curve.html\" title=\"trait elliptic_curve::weierstrass::Curve\">Curve</a> + <a class=\"trait\" href=\"elliptic_curve/trait.AlgorithmParameters.html\" title=\"trait elliptic_curve::AlgorithmParameters\">AlgorithmParameters</a> + <a class=\"trait\" href=\"elliptic_curve/sec1/trait.ValidatePublicKey.html\" title=\"trait elliptic_curve::sec1::ValidatePublicKey\">ValidatePublicKey</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"elliptic_curve/sec1/type.UntaggedPointSize.html\" title=\"type elliptic_curve::sec1::UntaggedPointSize\">UntaggedPointSize</a>&lt;C&gt;: <a class=\"trait\" href=\"elliptic_curve/ops/trait.Add.html\" title=\"trait elliptic_curve::ops::Add\">Add</a>&lt;<a class=\"type\" href=\"elliptic_curve/consts/type.U1.html\" title=\"type elliptic_curve::consts::U1\">U1</a>&gt; + <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.58.1/std/primitive.u8.html\">u8</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"elliptic_curve/sec1/type.UncompressedPointSize.html\" title=\"type elliptic_curve::sec1::UncompressedPointSize\">UncompressedPointSize</a>&lt;C&gt;: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.58.1/std/primitive.u8.html\">u8</a>&gt;,&nbsp;</span>","synthetic":false,"types":["elliptic_curve::secret_key::SecretKey"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()